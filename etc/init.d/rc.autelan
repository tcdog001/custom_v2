#!/bin/bash

copy_appkey() {
	mkdir -p /tmp/appkey /tmp/.backtrace
	cp -fpR /etc/appkey/* /tmp/appkey/
	appkey reload &> /dev/null
}

phase1() {
	clock_set
	. /etc/cp1.in
	mount; copy_appkey
	sysmount
	. /etc/cp2.in
	/etc/upgrade/set_dir.sh

	ifconfig lo up
	#
	# try use oem mac
	#
	local mac="$(atenv infos/oem/mac)"
	if [ -n "${mac}" ]; then
		ifconfig eth0 hw ether ${mac}
	fi
	ifconfig eth0 up
	ifconfig eth0 1.0.0.2 netmask 255.255.255.252

	vconfig add eth0 1
	vconfig set_flag eth0.1  1 1
	ifconfig eth0.1 192.168.0.1 up

	vconfig add eth0 9
	vconfig set_flag eth0.9  1 1
	ifconfig eth0.9 1.0.0.6 netmask 255.255.255.252 up
	
	# copy conf files to run config path
	cp /etc/config/* /tmp/config/
	cp /config/*     /tmp/config/
	
	# run acc processes, use acc_exit to quit acc
	acc_init &

	# run led processes, use led_exit to quit led
	led_init &

	# run gps processes, use gps_exit to quit gps
	gps_init &

	udhcpd -f /tmp/config/udhcpd.conf & 2>/dev/null

	sysctl -p 2>/dev/null
	dnsmasq -C /tmp/config/dnsmasq.conf -x /tmp/dnsmasq.pid & 2>/dev/null
	
	xinetd -f /tmp/config/xinetd.conf -pidfile /tmp/xinetd.pid &
}

phase2() {
	#
	# set 3g model, start_3g, add default route, add nat
	#
	/usr/sbin/set_3g_model
	/usr/sbin/start_3g &

	/etc/init.d/php-fpm_start.sh &
	/etc/init.d/nginx_start.sh &
	/etc/init.d/sshd_start.sh &
	
#	chmod -R 777 /usr/local/php/php-cgi.sock
#	chmod 777 /sbin/sudo
#	chmod u+s /sbin/sudo
#	chmod -R 777 /mnt/hd/website/
#	chmod -R 777 /sbin/arp

	/usr/sbin/crond -c /etc/crontabs/

	#check the last time drop reason
#	. /etc/drop_off.sh
#	. /etc/get_time.sh &

#	/usr/localweb/.compare_disk.sh &

#	wifidog -c /usr/local/etc/wifidog.conf 2>/dev/null

	#
	# try start cp's init
	#
	if [[ -n "${__CP_DEVMAC__}" ]]; then
			/etc/init.d/${__CP__}/init.sh 2>/dev/null &
	fi
	/usr/sbin/check_gps.sh &

	echo $(date '+%F-%H-%M-%S') > /tmp/.startup
	#
	# auto reboot after running 12h
	#
	/usr/sbin/timeout_reboot.sh &

	#
	# keep it last !!!
	#
#	/etc/upgrade/rootfs_init.sh &
}

phase3() {
	/usr/sbin/getinfo_and_register.sh &
	/usr/sbin/off_check.sh &
	return
}

main() {
	phase1
	phase2
	phase3
}

main "$@"
