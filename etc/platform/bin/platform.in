#!/bin/bash

if [[ -n "${__PLATFORM_BIN_PLATFORM_IN__}" ]]; then
	return
else
	__PLATFORM_BIN_PLATFORM_IN__="$0"
fi

readonly FILE_REGISTER=/data/.register.json
readonly FILE_CANCELLATION=/data/.cancellation.json
readonly BACKUP_LOG=/mnt/flash/rootfs_data/backup/log/
readonly CERTIFICATE=/etc/platform/conf/server.cer
readonly USER_PASSWD=autelanauteviewlms:autelanauteviewlms20140925

reg_check(){

	local curl_ok=0
	local curl_couldnt_connect=7 
	local curl_couldnt_resolve_host=6  
	local reconnection_interval=5  
	local cookie_file="$1"
	local url="$2"
	local result_file="$3"  
	local response_file="$4"  

	while true
	do
		curl  -k  -cert "${CERTIFICATE}"  -u "${USER_PASSWD}"  -H "Content-type: application/json"  -X POST  -d @"${FILE_REGISTER}" -s  -c "${cookie_file}"  "${url}" > "${result_file}"
		response=$?
		echo response="${response}" > "${response_file}"
		#		if [ $response -eq ${curl_couldnt_connect} ] || [ $response -eq ${curl_couldnt_resolve_host} ]; then
		if [[ "${response}" != "${curl_ok}" ]]; then
			sleep "${reconnection_interval}"
		else
			break
		fi
	done
}

reg_print_result(){

	local result_file=$1

	out=$(cat ${result_file} |jq '.code')
	case $out in
		0) 
			echo "register success!"
			;;
		-1)	
			echo "user/password error!"
			;;
		*) 
			echo "register fail!"
			;;
	esac
}

register_operation() {

	local page=lteRegister.do
	local cookie_file=/tmp/registerCookie.txt
	local result_file=/tmp/registerResult.txt
	local response_file=/tmp/registerResponse.txt
	local url_path=$1
	local url_default=$2

	if [[ -f "${result_file}" ]]; then
		rm ${result_file}
	fi

	while [[ ! -f "${FILE_REGISTER}" ]]; do
		sleep 5
	done

	if [[ -f "${FILE_REGISTER}" ]]; then
		if [[ -s "${url_path}" ]]; then
			url_path=$(cat ${url_path} |jq -j '.url')
			url="${url_path}""${page}"
		else
			url="${url_default}""${page}"
		fi
		reg_check  "${cookie_file}" "${url}" "${result_file}"  "${response_file}"
		rm -f "${response_file}"
	
		reg_print_result "${result_file}"
	#	if [ -f $result_file ];then
	#		rm $result_file
	#	fi
	else
		echo ${FILE_REGISTER}" is not exist!"
	fi
}

command_operation(){

	local page=lteCommand.do
	local cookie_file=/tmp/commandCookie.txt
	local result_file=/tmp/commandResult.txt
	local command_file=/tmp/command.txt
	local command_file_re=/tmp/command_record.log
	local url_path=$1
	local url_default=$2
	
	if [[ -f "${FILE_REGISTER}" ]];then
		if [[ -s "${url_path}" ]];then
			url_path=`cat ${url_path} |jq -j '.url'`
			url="${url_path}""${page}"
		else
			url="${url_default}""${page}"
		fi
		echo url="${url}"

		macKey='{"mac":'
		macValue=`cat ${FILE_REGISTER} |jq '.mac'`
		endChar='}'
		mac="${macKey}""${macValue}""${endChar}"
		echo mac="${mac}"

		curl  -k  -cert "${CERTIFICATE}"  -u "${USER_PASSWD}"  -H "Content-type: application/json"  -X POST  -d "${mac}"  -s  -c "${cookie_file}"  "${url}" > "${result_file}"

		out=$(cat ${result_file} |jq -j '.cmd')
		if [[ -f "${result_file}" ]]; then
	                rm "${result_file}"
	        fi
		echo out="${out}"
		result=$(echo "${out}" |base64 -d)
		echo "${result}" |tr ";" "\n" > "${command_file}" 
		cat "${command_file}" | while read myCommand
		do
	 		echo "Command:""${myCommand}"
	 		echo "Get the Command :""${myCommand}"";time is :"`date`>> "${command_file_re}"
			logger "platform" "command:$myCommand"

			eval "${myCommand}"
		done
		if [[ -f "${command_file}" ]];then
			rm "${command_file}"
		fi
	else
		logger "platform" "$FILE_REGISTER is not exist!"
	fi

}
