#!/bin/bash

if [[ -z "${__UTILS_LIST_IN__}" ]]; then __UTILS_LIST_IN__=_; else return; fi

#
#$1:value
#$2:list...
#
is_in_list() {
	local value=" $1 "; shift
	local list=" $* "

	if [[ "${list}" == "${list//${value}}" ]]; then
		echo no
	else
		echo yes
	fi
}

#
#$1:value
#$2:list name
#
in_list_check() {
        local var_value=$1
        local var_list_name=$2
        local var

        for var in ${!var_list_name}; do
                if [ "${var_value}" == "${var}" ]; then
                        return 0
                fi
        done

        return ${e_inval}
}

list_cons() {
	echo "$@"
}

list_shift() {
	local count="$1"
	shift $((count+1))

	echo "$@"
}

#
# first: the first NODE
# last: the last NODE
#
# tail: the LIST after cut first
# head: the LIST after cut last
#
# |<-first->|<----------tail--------------------------------->|
# +---------+---------+---------+---------+---------+---------+
# |    1    |    2    |    3    |   ...   |   n-1   |    n    |
# +---------+---------+---------+---------+---------+---------+
# |<--------------------head----------------------->|<-last-->|
#

list_first() {
	echo "$1"
}

list_tail() {
	shift; echo "$@"
}

#
#for v1
#
get_list_first() {
	list_first "$@"
}

#
#for v1
#
get_list_tail() {
	list_tail "$@"
}

list_head() {
	local count=$#

	case ${count} in
	0 | 1)
		echo ""
		;;
	*)
		local list="$@"
		#
		# cut last
		#
		echo ${list% *}
		;;
	esac
}

list_last() {
	local count=$#

	if ((0==count)); then
		echo ""
	else
		eval "echo \${${count}}"
	fi
}

list_reverse() {
	local count=$#

	if ((0==count)); then
		echo ""
	else
		local first="$1"; shift
		local tail="$@"

		echo "$(list_reverse ${tail}) ${first}"
	fi
}

#
#$1:node
#[$2:list...]
#
list_insert() {
	local node="$1"; shift
	local list="$*"

	if [[ -z "${list}" ]]; then
		echo "${node}"
	elif [[ "${list}" == "${list/${node}}" ]]; then
		#
		# list NOT include node
		#
		echo "${node} ${list}"
	else
		echo "${list}"
	fi
}

#
#$1:node
#$2:list...
#
list_remove() {
	local node="$1"; shift
	local list="$*"

	if [[ -z "${list}" ]]; then
		echo ""
	else
		echo "${list/${node}}"
	fi
}

#
#$1:list
#
list_reduce() {
	local list
	local node

	for node in "$@"; do
		list=$(list_insert ${node} ${list})
	done

	echo "${list}"
}

#
#$1:list a...
#$2:list b...
#
list_merge() {
	echo $(list_reduce "$@")
}
