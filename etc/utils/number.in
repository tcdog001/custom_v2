#!/bin/bash

if [[ -z "${__UTILS_NUMBER_IN__}" ]]; then __UTILS_NUMBER_IN__=_; else return; fi

#
#$1:number
#
number_check() {
	local number=$1

	expr ${number} + 1 &> /dev/null

	return $?
}


#
#$1:ns config
#$2:ns
#
ns_tolist() {
	local config="$1"; shift
	local ns="$*"

	local ifs=$(aa_get ${config} ifs)

	echo ${ns//${ifs}/ }
}

#
#$1:ns config
#$2:number list
#
ns_fromlist() {
	local config="$1"; shift
	local list="$@"

	local ifs=$(aa_get ${config} ifs)

	echo ${list// /${ifs}}
}

#
#$1:ns string
#$2:ns config
#$3:ns idx
#
#	number string "a.b.c.d" 0 ==> a
#	number string "a.b.c.d" 1 ==> b
#	number string "a.b.c.d" 2 ==> c
#	number string "a.b.c.d" 3 ==> d
#
ns_number() {
	local ns="$1"
	local config="$2"
	local idx="$3"

	#
	# "a.b.c.d"==>"a b c d"
	#
	local list=$(ns_tolist ${config} ${ns})
	local -a X=(${list})

	echo "${X[${idx}]}"
}

#
#$1:ns string
#$2:ns config
#
ns_reverse() {
	local ns="$1"
	local config="$2"

	local list=$(ns_tolist ${config} ${ns})
	list=$(list_reverse ${list})

	echo $(ns_fromlist ${config} ${list})
}

#
#$1:ns string
#$2:ns config
#
ns_first() {
	local ns="$1"
	local config="$2"

	local ifs=$(aa_get ${config} ifs)

	echo ${ns%%${ifs}*}
}

#
#$1:ns string
#$2:ns config
#
ns_tail() {
	local ns="$1"
	local config="$2"

	local ifs=$(aa_get ${config} ifs)

	echo ${ns#*${ifs}}
}

#
#$1:ns x, format a.b.c.d, a/b/c/d is number
#$2:ns y, format a.b.c.d, a/b/c/d is number
#$3:ns config
#
ns_compare() {
	local ns_x="$1"
	local ns_y="$2"
	local config="$3"

	local count=$(aa_get ${config} count)

	local i
	for ((i=0; i<count; i++)); do
		local x=$(ns_number "${ns_x}" "${config}" ${i})
		local y=$(ns_number "${ns_y}" "${config}" ${i})

		if ((x < y)); then
			echo "lt"; return
		elif ((x > y)); then
			echo "gt"; return
		fi
	done

	echo "eq"
}

#
#$1:ns
#$2:ns config
#
ns_check() {
	local ns="$1"
	local config="$2"

	if [[ -z "${ns}" ]]; then
		return ${e_bad_ns}
	fi

	local ifs=$(aa_get ${config} ifs)
	if [[ -z "${ifs}" ]]; then
		return ${e_bad_ns}
	fi

	local count=$(aa_get ${config} count)
	number_check ${count} || {
		return ${e_bad_ns}
	}

	local max=$(aa_get ${config} max)
	number_check ${max} || {
		return ${e_bad_ns}
	}

	local min=$(aa_get ${config} min)
	number_check ${min} || {
		return ${e_bad_ns}
	}

	local i
	for ((i=0; i<count; i++)); do
		local x=$(ns_number "${ns}" "${config}" ${i})

		if [[ -z "${x}" ]]; then
			return ${e_bad_ns}
		fi

		number_check ${x} || {
			return ${e_bad_ns}
		}

		if ((x > max)); then
			return ${e_bad_ns}
		elif ((x < min)); then
			return ${e_bad_ns}
		fi
	done
}

#
#$1:ns number
#$2:ns config
#
ns_cat() {
	local number="$1"
	local config="$2"

	local ifs=$(aa_get ${config} ifs)
	local count=$(aa_get ${config} count)

	case ${count} in
	0)
		echo ""
		;;
	1)
		echo ${number}
		;;
	*)
		local new=${number}
		local i

		((count--))
		for ((i=0; i<count; i++)); do
			new="${new}${ifs}${number}"
		done

		echo "${new}"
		;;
	esac
}

#
#$1:ns config
#
ns_min() {
	local config="$1"
	local min=$(aa_get ${config} min)

	echo $(ns_cat ${min} ${config})
}

#
#$1:ns config
#
ns_max() {
	local config="$1"
	local max=$(aa_get ${config} max)

	echo $(ns_cat ${max} ${config})
}

#
#$1:ns count
#$2:ns ifs
#$3:ns min
#$4:ns list
#
__ns_plusplus() {
	local count="$1"
	local ifs="$2"
	local min="$3"; shift 3
	local list="$@"

	local first=$(list_first ${list})
	local tail=$(list_tail ${list})
	local new

	if ((first<max)); then
		((first++))
		new="${first}${ifs}${tail}"
	else
		new=$(__ns_plusplus $((count-1)) "${ifs}" ${min} ${tail})
		new="${min}${ifs}${new}"
	fi

	echo ${new}
}

#
#$1:ns
#$2:ns config
#
ns_plusplus() {
	local ns="$1"
	local config="$2"

	local count=$(aa_get ${config} count)
	local min=$(aa_get ${config} min)
	local ifs=$(aa_get ${config} ifs)
	local list=$(ns_tolist ${config} ${ns})

	list=$(list_reverse ${list})
	list=$(__ns_plusplus ${count} "${ifs}" ${min} ${list})
	list=$(list_reverse ${list})

	echo $(ns_fromlist ${config} ${list})
}
