#!/bin/bash

if [[ -z "${__UTILS_LOG_IN__}" ]]; then __UTILS_LOG_IN__=_; else return; fi

. ${__ROOTFS__}/etc/utils/json.in

readonly -A SYSLOG_PRI=(
	[emerg]=0
	[alert]=1
	[crit]=2
	[error]=3
	[waring]=4
	[notice]=5
	[info]=6
	[debug]=7
)

readonly SYSLOG_PRI_HIGH=3


#
#just for test
#
jlogger() {
	return
}

#
#$1:pri
#$2:app
#$3:json...
#
jlog_obj() {
	local pri="$1"
	local app="$2"; shift 2
	local json="$*"

	if [[ "_" == "${app}" ]]; then
		app=common
	fi

	jlogger "${PRI}" "${app}" "${json}"

	if [[ -n "${__SYSLOG_ECHO__}" ]]; then
		local PRI=${SYSLOG_PRI[${pri}]}
		local HIGH=${__SYSLOG_PRI__:-${SYSLOG_PRI_HIGH}}

		if ((PRI<=HIGH)); then
			local obj="$(json_create_bykvs app ${app} pri ${pri})"

			echo $(json_merge "${obj}" "${json}" ) | jq .
		fi
	fi
}

#
#$1:pri
#$2:app
#$3:kvs...
#
#   jlog_kvs debug app k1 v1 k2 v2 ... kn vn
#       value maybe a json
#
jlog_kvs() {
	local pri="$1"
	local app="$2"; shift 2
	local json=$(json_create_bykvs "$@")

	jlog_obj "${pri}" "${app}" "${json}"
}

#
#$1:app
#$2:kvs...
#
jemerg_kvs() {
	jlog_kvs emerg "$@"
}

#
#$1:app
#$2:kvs...
#
jalert_kvs() {
	jlog_kvs alert "$@"
}

#
#$1:app
#$2:kvs...
#
jcrit_kvs() {
	jlog_kvs crit "$@"
}

#
#$1:app
#$2:kvs...
#
jerror_kvs() {
	jlog_kvs error "$@"
}

#
#$1:app
#$2:kvs...
#
jwaring_kvs() {
	jlog_kvs waring "$@"
}

#
#$1:app
#$2:kvs...
#
jnotice_kvs() {
	jlog_kvs notice "$@"
}

#
#$1:app
#$2:kvs...
#
jinfo_kvs() {
	jlog_kvs info "$@"
}

#
#$1:app
#$2:kvs...
#
jdebug_kvs() {
	jlog_kvs debug "$@"
}

#
#$1:pri
#$2:app
#$3:KVs...
#
#   jlog_KVs debug app k1 v1 k2 v2 ... kn vn
#       key maybe as path(include ifs /)
#       value maybe a json
#
jlog_KVs() {
	local pri="$1"
	local app="$2"; shift 2
	local json=$(json_create "$@")

	jlog_obj "${pri}" "${app}" "${json}"
}

#
#$1:app
#$2:KVs...
#
jemerg_KVs() {
	jlog_KVs emerg "$@"
}

#
#$1:app
#$2:KVs...
#
jalert_KVs() {
	jlog_KVs alert "$@"
}

#
#$1:app
#$2:KVs...
#
jcrit_KVs() {
	jlog_KVs crit "$@"
}

#
#$1:app
#$2:KVs...
#
jerror_KVs() {
	jlog_KVs error "$@"
}

#
#$1:app
#$2:KVs...
#
jwaring_KVs() {
	jlog_KVs waring "$@"
}

#
#$1:app
#$2:KVs...
#
jnotice_KVs() {
	jlog_KVs notice "$@"
}

#
#$1:app
#$2:KVs...
#
jinfo_KVs() {
	jlog_KVs info "$@"
}

#
#$1:app
#$2:KVs...
#
jdebug_KVs() {
	jlog_KVs debug "$@"
}

#
#$1:file
#$2:info...
#
log_with_limit() {
	local file="$1"; shift
	local info="$*"

	local count=$(sed -n '$=' ${file} 2>/dev/null)
	number_check ${count} && {
		if ((count>1000)); then
			sed -i "1,100d" ${file} &> /dev/null
		fi
	}

	echo "${info}" >> ${file}; fsync ${file}
}

#
#$1:tag
#[$2:info...]
#
do_logger() {
	local tag="$1"; shift

	logger -t "${tag}" "$*"
}

#
#$1:tag
#[$2:info...]
#
echo_logger() {
	echo "$@"
	do_logger "$@"
}
