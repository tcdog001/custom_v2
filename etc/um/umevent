#!/bin/bash

iplist_file="/tmp/iplist.conf"

do_limit() {
	local argc=$#
	local mac="$1"
	local ip="$2"
	local group="$3"; shift 3
	local json="$*"

	if ((argc<3)); then
		return 1
	fi

	#echo todo
	#echo 1. move ip to ipset 'unauth'
	#echo 2. set tc default
	#echo 3. set nginx default
}

um_init() {
	echo todo
	echo 1. init global iptable
	echo 2. init global ipset
	
	cp /etc/um/iplist.conf /tmp/iplist.conf
	/etc/init.d/nginx_start.sh
	/etc/um/iptables_init.sh
	/etc/um/set_tc.sh
}

um_fini() {
	echo todo
	echo 1. clear global iptable
	echo 2. clear global ipset 

	iptables -F FORWARD
	iptables -P  FORWARD ACCEPT
	iptables -t nat -F PREROUTING
	ipset -F white_list
	#/etc/um/set_tc.sh cleanall
}

do_xbind() {
	local argc=$#
	local mac="$1"
	local ip="$2"

	if ((2!=argc)); then
		return 1
	fi
	do_limit "${mac}" "${ip}" 0
}

um_bind() {
	local argc=$#
	local mac="$1"
	local ip="$2"

	echo 1. begin bind 
	#echo 2. set ip to nginx
	#echo 3. set ip to ipset 

	if ((2!=argc)); then
		return 1
	fi

	do_xbind "$@"

}

um_unbind() {
	do_xbind "$@"

	local argc=$#
	local mac="$1"
	local ip="$2"

	if ((2!=argc)); then
		return 1
	fi

	echo 1. begin unbind 
	echo 2. remove ip from nginx
	echo 3. remove ip from ipset 

	if [ ! -f ${iplist_file} ]; then	
		echo "Error:there is no ${iplist_file}"
		return 1
	fi
	local flag=`awk -F"  *|;" '/'"$ip "'/{print $2}'  ${iplist_file}`				
	sed -i "s/${ip} [ ]*${flag}/${ip} 0/g" ${iplist_file} 
	nginx -s reload   -c /usr/local/nginx/conf/nginx.conf
	/sbin/ipset -D white_list ${ip}
	/etc/um/change_tc.sh ${ip} 0
}

um_auth() {
	do_limit "$@"
	echo 1. begin auth 
	echo 2. set ip to nginx
	echo 3. set ip to ipset 

	local argc=$#
	local mac="$1"
	local ip="$2"
	local group="$3"; shift 3
	local json="$*"

	if ((argc<3)); then
		return 1
	fi

	if [ ! -f ${iplist_file} ]; then	
		echo "Error:there is no ${iplist_flile}"
		return 1
	fi
	local flag=`awk -F"  *|;" '/'"$ip "'/{print $2}'  ${iplist_file}`				
	sed -i "s/${ip} [ ]*${flag}/${ip} 1/g" ${iplist_file} 
	nginx -s reload   -c /usr/local/nginx/conf/nginx.conf
	/sbin/ipset -A white_list ${ip}
	if ((group >= 0)); then
		/etc/um/change_tc.sh ${ip} ${group}
	else
		/etc/um/change_tc_json.sh ${ip} ${mac} ${json}
	fi

}

do_offline() {
	local ip="$1"
	local reason="$2"

	#
	# todo: update user offline reason
	#
}

um_deauth() {
	local argc=$#
	local mac="$1"
	local ip="$2"
	local reason="$3"

	if ((3!=argc)); then
		return 1
	fi

	echo 1. begin deauth 
	echo 2. remove ip from nginx
	echo 3. remove ip from ipset 


	do_limit "${mac}" "${ip}" 0
	do_offline "${ip}" "${reason}"

	if [ ! -f ${iplist_file} ]; then	
		echo "Error:there is no ${iplist_file}"
		return 1
	fi
	local flag=`awk -F"  *|;" '/'"${ip} "'/{print $2}'  ${iplist_file}`				
	sed -i "s/${ip} [ ]*${flag}/${ip} 0/g" ${iplist_file} 
	nginx -s reload   -c /usr/local/nginx/conf/nginx.conf
	/sbin/ipset -D white_list ${ip}
	/etc/um/change_tc.sh ${ip} 0
}

main() {
	local action="$1"; shift
	echo "$action $@"

	case ${action} in
		init|fini|bind|unbind|auth|deauth)
			um_${action} "$@"
			;;
		*)
			return 1
			;;
	esac
}

main "$@"
