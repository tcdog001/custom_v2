#!/bin/bash
. /etc/utils/utils.in

path_3g=/tmp/.3g
path_data_3g=/data/3g
#
# get 3G module type
#
get_model() {
    local model_3g=$(cat ${path_3g}/3g_model 2>/dev/null)
    echo ${model_3g}
}
#
# get iccid
#
get_sim_iccid() {
        local model=$(get_model)
        local sim_iccid=""

        case ${model} in
                "C5300V")
                        sim_iccid=$(/tmp/at_ctrl at+iccid | awk '/SCID:/{print $2}' |sed -n '$p')
                        ;;
                "DM111")
                        sim_iccid=$(/tmp/at_ctrl at+iccid | awk '/ICCID:/{print $2}' |sed -n '$p')
                        ;;
                "SIM6320C")
                        sim_iccid=$(/tmp/at_ctrl at+ciccid | awk '/ICCID:/{print $2}' |sed -n '$p')
                        ;;
                "MC271X")
                        sim_iccid=$(/tmp/at_ctrl at+zgeticcid | awk '/ZGETICCID/{print $2}' |sed -n '$p')
                        ;;
                *)
                        jerror_kvs '3g'  \
                                error no_support_${model}      \
                                #end
                        ;;
        esac
        echo ${sim_iccid}
}
report_sim_iccid() {
        local iccid_tmp=${path_3g}/iccid
        local iccid_data=${path_data_3g}/iccid
        local sim_iccid=""
        local i=0
        while (( $i < 10 ))
        do
                sim_iccid=$(get_sim_iccid)
                if [[ ${sim_iccid} ]]; then
                        break
                else
                        ((i++))
                        sleep 1
                fi
        done
        if [[ -z ${sim_iccid} ]];then
                sim_iccid=$(cat ${iccid_data} 2> /dev/null)
                jinfo_kvs '3g'  \
                        info 'fake_iccid'       \
                        #end
        fi
        [[ -z ${sim_iccid} ]] && sim_iccid="null"
        echo ${sim_iccid} > ${iccid_tmp}; fsync ${iccid_tmp}
}
#
# get meid and sn
#
get_meid_of3g() {
        local model=$(get_model)
        local meid=""

        case ${model} in
                "SIM6320C")
                        meid=$(/tmp/at_ctrl ati | awk -F ': 0x' '/MEID/{print $2}' | sed -n '$p')
                        ;;
                *)
                        meid=$(/tmp/at_ctrl at^meid | awk -F '0x' '/0x/{print $2}'| sed -n '1p')
                        ;;
        esac
        echo ${meid}
}
report_meid_of3g() {
        local meid_tmp=${path_3g}/meid
        local sn_tmp=${path_3g}/sn
        local meid_data=${path_data_3g}/meid
        local meid=""
        local j=0

        while (( $j < 10 ))
        do
                meid=$(get_meid_of3g)
                if [[ ${meid} ]]; then
                        break
                else
                        ((j++))
                        sleep 1
                fi
        done
        if [[ -z ${meid} ]];then
                meid=$(cat ${meid_data} 2> /dev/null)
                jinfo_kvs '3g'  \
                        info 'fake_meid'
                        #end
        fi
        [[ -z ${meid} ]] && meid="null"
        echo ${meid} > ${meid_tmp}; fsync ${meid_tmp}
        echo ${meid} > ${sn_tmp}; fsync ${sn_tmp}
}
#
# get imsi
#
get_sim_imsi() {
        local imsi=""

        imsi=$(/tmp/at_ctrl at+cimi | awk  '/460/{print $0}'| sed -n '1p')
        echo ${imsi}
}
report_imsi_of3g() {
        local imsi_tmp=${path_3g}/imsi
        local imsi_data=${path_data_3g}/imsi
        local imsi=$(get_sim_imsi)

        if [[ -z ${imsi} ]]; then
                imsi=$(cat ${imsi_data} 2> /dev/null)
                jinfo_kvs '3g'  \
                        info 'fake_imsi'        \
                        #end
        fi
        [[ -z ${imsi} ]] && imsi="null"
        echo ${imsi} > ${imsi_tmp}; fsync ${imsi_tmp}
}
#
# get the 3g module manufacturer
#
get_company_of3g() {
        local model=$(get_model)
        local company_of3g=""

        case ${model} in
                "DM111")
                        company_of3g="Wistron NeWeb Corp."
                        ;;
                "SIM6320C")
                        company_of3g="SIMCOM INCORPORATED"
                        ;;
                "MC271X")
                        company_of3g="ZTEMT INCORPORATED"
                        ;;
                *)
                        ;;
        esac
        echo ${company_of3g}
}
report_company_of3g() {
        local company_tmp=${path_3g}/company
        local company_data=${path_data_3g}/company
        local company=$(get_company_of3g)

        if [[ -z ${company} ]]; then
                company=$(cat ${company_data} 2> /dev/null)
                jinfo_kvs '3g'  \
                        info 'fake_company'     \
                        #end
        fi
        [[ -z ${company} ]] && company="null"
        echo ${company} > ${company_tmp}; fsync ${company_tmp}
}
#
# get the 3g net, CMDA or WADMA or TD-SCDMA
#
get_3g_net() {
        local sim_iccid=$(cat ${path_3g}/iccid 2>/dev/null)
        local code=$(echo ${sim_iccid} | awk -F '' '{print $5$6}')
        local net=""

        [[ "${code}" = "01" ]] && net=WCDMA
        [[ "${code}" = "03" ]] && net=CDMA2000
        [[ "${code}" = "00" ]] && net=GSM/TD-SCDMA
        [[ "${code}" = "02" ]] && net=GSM/TD-SCDMA
        [[ "${code}" = "07" ]] && net=TD-SCDMA
        echo ${net}
}
report_net_3g() {
        local net_3g_path=${path_3g}/net
        local net_data=${path_data_3g}/net
        local net_3g=$(get_3g_net)

        if [[ -z ${net_3g} ]]; then
                net_3g=$(cat ${net_data} 2> /dev/null)
                jinfo_kvs '3g'  \
                        info 'fake_net' \
                        #end
        fi
        [[ -z ${net_3g} ]] && net_3g=""
        echo ${net_3g} > ${net_3g_path}; fsync ${net_3g_path}
}
#
# WCDMA ,GSM/TD-SCDMA ,TD-SCDMA do not dial-up internet access
#
get_apn() {
        local telephone=""
        local apn=""
        local tel_file=${path_3g}/tel
        local apn_file=${path_3g}/apn
        local net=$(cat ${path_3g}/net 2>/dev/null)

        case ${net} in
            "CDMA2000")
                    telephone="#777"
                    apn="ctnet"
                    ;;
            "WCDMA")
                    telephone="*99#"
                    apn="3gnet"
                    ;;
            "GSM/TD-SCDMA")
                    telephone="*98*1#"
                    apn="cmnet"
                    ;;
            "TD-SCDMA")
                    telephone="*98*1#"
                    apn="lte"
                    ;;
            *)
                    jinfo_kvs '3g'  \
                        info 'fake_tel_apn'     \
                        #end
                    ;;
        esac
        echo ${telephone} > ${tel_file}; fsync ${tel_file}
        echo ${apn} > ${apn_file}; fsync ${apn_file}
}

#
# get 3g signal strength
#
get_hdrcsq() {
        local model=$(get_model)
        local signal=""

        case ${model} in
                "SIM6320C")
                        signal=$(/tmp/at_ctrl at^hdrcsq |awk '/hdrcsq:/{print $2}' |sed -n '$p' |sed 's/ //g')
                        ;;
                "MC271X")
                        signal=$(/tmp/at_ctrl at^hdrcsq |awk -F ':' '/HDRCSQ:/{print $2}' |sed -n -e 's/\([^0-9]\)/\2/p' |sed -n '$p')
                        ;;
                "DM111")
                        signal=$(/tmp/at_ctrl at+csq |awk '/csq:/{print $2}' |awk -F ',' '{print $1}' |sed 's/ //g' |sed -n '$p')
                        ;;
                "C5300V")
                        signal=$(/tmp/at_ctrl at^hdrcsq |awk '/HDRCSQ:/{print $2}' |sed -n '$p')
                        ;;
                *)
                        ;;
        esac
        echo ${signal}
}
report_hdrcsq() {
        local k=0
        while [ $k -lt 5 ]
        do
                local signal=$(get_hdrcsq)
                if [[ ! -z ${signal} ]];then
                        break
                else
                        ((k++))
                        sleep 1
                fi
        done
        if [[ -z ${signal} ]];then
                signal="0"
        fi
        echo ${signal}
}
#
# get the rssi of 3g signal, dbm
#
get_dbm() {
        local hdrcsq=$(cat ${path_3g}/hdrcsq |sed -n '$p' 2>/dev/null)
        local dbm=""
        if [[ ${hdrcsq} -ge 0 && ${hdrcsq} -le 31 ]];then
                dbm=$((113-2*${hdrcsq}))
        else
                if [[ ${hdrcsq} -eq 99 ]];then
                        dbm="not known or not detectable"
                fi
        fi
        echo "-${dbm}" > ${path_3g}/dbm
}
#
# check whether there is a SIM card
#
get_sim_state() {
        local sim_state=""
        local sim_file=${path_3g}/sim_state
        local m=0
        while(( $m < 5 ))
        do
                sim_state=$(/tmp/at_ctrl  AT+CPIN? |awk -F ':' '/CPIN:/{print $2}' | sed -n '$p' | awk '{print substr($1,length($1)-5)}')
                if [[ ${sim_state} == "READY" ]];then
                        break
                else
                        ((m++))
                        sleep 1
                fi
        done
        if [[ ${sim_state} != "READY" ]];then
                sim_state="no sim card"
        fi
        echo ${sim_state} >${sim_file}; fsync ${sim_file}
        cat ${sim_file}
}

