#!/bin/bash

func_path=/tmp/config
gps_device=/dev/ttyAMA2
gps_data_file=/tmp/gps.log

#
# $1: command
#
start_move_log() {
	local command=$1
	local delay=300
	local interval=300
	local output=gps-
	local input=${gps_data_file}
	local str_tmp=""

	str_tmp=$(get_confinfo gps.conf.move_log.delay)
	[[ "${str_tmp}" != "null" ]] && delay=${str_tmp}

	str_tmp=$(get_confinfo gps.conf.move_log.interval)
	[[ "${str_tmp}" != "null" ]] && interval=${str_tmp}

	str_tmp=$(get_confinfo gps.conf.anlysis_data.file)
	[[ "${str_tmp}" != "null" ]] && input=${str_tmp}

	echo "${delay} ${interval} ${input} ${output} ${command}"

	sleep ${delay}
	${command} "${output}" "${input}" "${interval}" &
}

#
# $1: command
#
start_obtain_data() {
	local command=$1
	local delay=30
	local interval=10
	local output=${gps_data_file}
	local str_tmp=""

	str_tmp=$(get_confinfo gps.conf.obtain_data.delay)
	[[ "${str_tmp}" != "null" ]] && delay=${str_tmp}

	str_tmp=$(get_confinfo gps.conf.obtain_data.interval)
	[[ "${str_tmp}" != "null" ]] && interval=${str_tmp}

	str_tmp=$(get_confinfo gps.conf.anlysis_data.file)
	[[ "${str_tmp}" != "null" ]] && output=${str_tmp}

	echo "${delay} ${interval} ${output} ${command} ${gps_device}"

	sleep ${delay}
	while :
	do
		${command} "${gps_device}" > "${output}"
		sleep ${interval}
	done
}

#
# $1: command
#
start_anlysis_data() {
	local command=$1
	local delay=60
	local interval=30
	local output=${gps_data_file}
	local dpath=/tmp/.gps
	local str_tmp=""

	str_tmp=$(get_confinfo gps.conf.anlysis_data.delay)
	[[ "${str_tmp}" != "null" ]] && delay=${str_tmp}
	
	str_tmp=$(get_confinfo gps.conf.anlysis_data.interval)
	[[ "${str_tmp}" != "null" ]] && interval=${str_tmp}
	
	str_tmp=$(get_confinfo gps.conf.anlysis_data.file)
	[[ "${str_tmp}" != "null" ]] && output=${str_tmp}

	str_tmp=$(get_confinfo gps.conf.anlysis_data.path)
	[[ "${str_tmp}" != "null" ]] && dpath=${str_tmp}

	echo "${delay} ${interval} ${output} ${command} ${dpath} ${gps_device}"
	
	sleep ${delay}
	${command} -t "${interval}" -l "${output}" -p "${dpath}" -d "${gps_device}" 1> /dev/null &
}

main() {
	local func_path_tmp=$(get_confinfo gps.path)
	[[ "${func_path_tmp}" != "null" ]] && func_path=${func_path_tmp}
	
	local gps_config=${func_path}/gps.conf
	local tmp=${func_path}/.config_gps
	local alias command

	sed '/#/d;/^$/d' ${gps_config} > ${tmp}

	gps_device_tmp=$(get_confinfo gps.conf.gps_device)
	[[ ${gps_device_tmp} ]] && gps_device=${gps_device_tmp}

	while read alias command; do
		[[ "${alias}" = "move_log" || "${alias}" = "obtain_data" || "${alias}" = "anlysis_data" ]] \
			&& start_${alias} ${command} &
	done < ${tmp}

	rm ${tmp}
}

main "$@"
